blueprint:
  domain: automation
  name: "Sports: Start Monitor"
  description: 'This blueprint announces the that game is starting a 60, 30 and 10 minute marks, flashes team colours and plays an mp3.'
  input:
    teams:
      name: Teams
      description: Teams whose games you want to monitor.
      selector:
        entity:
          integration: teamtracker
          multiple: true
    light_targets:
      name: Lights to flash
      description: Choose one or more lights.
      selector:
        target:
          entity:
            domain: light
    repeat_count:
      name: Repeat count
      description: How many times should the color cycle run?
      selector:
        number:
          min: 1.0
          max: 15.0
          mode: slider
          step: 1.0
      default: 3
    media_player_target:
      name: Media Player
      description: Select the media player to play the sound.
      selector:
        entity:
          domain: media_player
    media_content:
      name: Media Content ID
      description: The content ID for the sound to play.
      selector:
        text:
    volume_level:
      name: Volume Level
      description: Set the volume level for the media player.
      selector:
        number:
          min: 0.1
          max: 1.0
          mode: slider
          step: 0.1
      default: 0.8

trigger:
  - platform: state
    entity_id: !input teams
    to: 'IN'
  - platform: state
    entity_id: !input teams
    attribute: kickoff_in
    to: 'in 1 hour'
  - platform: state
    entity_id: !input teams
    attribute: kickoff_in
    to: 'in 30 minutes'
  - platform: state
    entity_id: !input teams
    attribute: kickoff_in
    to: 'in 10 minutes'

action:
  - choose:
      - conditions: "{{ trigger.to_state.state == 'IN' }}"
        sequence:
          - service: media_player.volume_set
            data:
              entity_id: !input media_player_target
              volume_level: !input volume_level
          - service: media_player.play_media
            data:
              entity_id: !input media_player_target
              media_content_id: !input media_content
              media_content_type: music
          - service: scene.create
            data:
              snapshot_entities: !input light_targets
              scene_id: team_game_start_lights_capture
          - repeat:
              count: !input repeat_count
              sequence:
                - service: light.turn_on
                  data:
                    rgb_color: >
                      {% set color_str = state_attr(trigger.entity_id, 'team_colors')[0] %}
                      {% if color_str %}
                        {{ [color_str[1:3] | int(base=16), color_str[3:5] | int(base=16), color_str[5:7] | int(base=16)] }}
                      {% else %}
                        [255, 255, 255]  # default white color in case of None
                      {% endif %}
                  target: !input light_targets
                - delay:
                    seconds: 3
                - service: light.turn_on
                  data:
                    rgb_color: >
                      {% set color_str = state_attr(trigger.entity_id, 'team_colors')[1] %}
                      {% if color_str %}
                        {{ [color_str[1:3] | int(base=16), color_str[3:5] | int(base=16), color_str[5:7] | int(base=16)] }}
                      {% else %}
                        [255, 255, 255]  # default white color in case of None
                      {% endif %}
                  target: !input light_targets
                - delay:
                    seconds: 3
          - service: scene.turn_on
            target:
              entity_id: scene.team_game_start_lights_capture
      - conditions: "{{ trigger.to_state.attributes.kickoff_in in ['in 1 hour', 'in 30 minutes', 'in 10 minutes'] }}"
        sequence:
          - service: tts.google_translate_say
            data:
              entity_id: !input media_player_target
              message: "Attention! The game for {{ state_attr(trigger.entity_id, 'team_name')[0] }} will start {{ trigger.to_state.attributes.kickoff_in }}."
              language: 'en'
